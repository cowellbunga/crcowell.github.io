{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":".bs-sidebar { display: none; } .map { max-width: fit-content; margin-left: auto; margin-right: auto; } .map img { margin: 36px; } figure { display: inline-block; overflow-wrap: anywhere; } figcaption { text-align: center; overflow-wrap: anywhere; white-space: pre-line; } Welcome to my portfolio website! # This website was created to serve as a professional portfolio that highlights the skills and techniques I have learned in the Master of Geospatial Information Science and Technology (MGIST) program at NC State. I have worked with a variety of tools to perform spatial analysis, including ESRI products (arcpy, AGOL, ArcGIS Pro, ArcServer) and open source alternatives (QGIS, geopandas, GRASS). This portfolio focuses on four core competencies: Databases and Database Management , Modeling and Analytics , Programming , and Web Services . Feel free to explore my chosen examples representing each competency via the navigation bar or the image tiles below. Databases and Database Management Modeling and Analytics Programming Web Services","title":"Home"},{"location":"#welcome-to-my-portfolio-website","text":"This website was created to serve as a professional portfolio that highlights the skills and techniques I have learned in the Master of Geospatial Information Science and Technology (MGIST) program at NC State. I have worked with a variety of tools to perform spatial analysis, including ESRI products (arcpy, AGOL, ArcGIS Pro, ArcServer) and open source alternatives (QGIS, geopandas, GRASS). This portfolio focuses on four core competencies: Databases and Database Management , Modeling and Analytics , Programming , and Web Services . Feel free to explore my chosen examples representing each competency via the navigation bar or the image tiles below. Databases and Database Management Modeling and Analytics Programming Web Services","title":"Welcome to my portfolio website!"},{"location":"capstone/","text":"Capstone Experience #","title":"Capstone Experience"},{"location":"capstone/#capstone-experience","text":"","title":"Capstone Experience"},{"location":"reflection/","text":"Program Reflection #","title":"Program Reflection"},{"location":"reflection/#program-reflection","text":"","title":"Program Reflection"},{"location":"about/about/","text":".bs-sidebar{ display: none; } About Me # Hello, my name is Chandler Cowell. I am an economist at RTI International and a spatial analytics master's student in my last year of NC State's MGIST program. Welcome to my MGIST portfolio site! During my undergraduate career, I received my Renewable Energy Technologies Diploma from the NC Clean Technology Center in 2018. I received my bachelor's in Environmental Science with a Renewable Energy Assessment minor from NC State in 2019. Just prior to graduation, I joined RTI International as an Energy Economics intern with the Center for Applied Economics and Strategy and I joined as a full-time economist later that year. Resume Contact Me","title":"About Me"},{"location":"about/about/#about-me","text":"Hello, my name is Chandler Cowell. I am an economist at RTI International and a spatial analytics master's student in my last year of NC State's MGIST program. Welcome to my MGIST portfolio site! During my undergraduate career, I received my Renewable Energy Technologies Diploma from the NC Clean Technology Center in 2018. I received my bachelor's in Environmental Science with a Renewable Energy Assessment minor from NC State in 2019. Just prior to graduation, I joined RTI International as an Energy Economics intern with the Center for Applied Economics and Strategy and I joined as a full-time economist later that year. Resume Contact Me","title":"About Me"},{"location":"about/contact/","text":".bs-sidebar{ display: none; } h1.title{ display: none; } Loading\u2026","title":"Contact Me"},{"location":"about/resume/","text":"Summary of Professional Experience # Mr. Cowell is an economist in RTI International\u2019s Center for Applied Economics and Strategy. He supports senior staff in conducting literature reviews; drafting technical documents; producing public-facing summary reports, data analyses, and geospatial analyses; and performing qualitative and quantitative research for nonprofit, private-sector, federal, and international clients. His past work includes data collection and analysis, writing of technical reports, field research of soil and gases, and laboratory research for enzyme and microbial biomass analyses. Mr. Cowell has used statistical software such as Excel to manipulate and analyze datasets. He has also used geographic information software such as ArcGIS and QGIS to perform spatial analyses of geocoded datasets. His research interests include renewable energy, economic development, international development, and the environment. Education # BS, Environmental Science (minor in Renewable Energy Assessment), North Carolina State University, Raleigh, NC, 2019. Certifications and Licenses # Renewable Energy Technologies Diploma, North Carolina Clean Energy Technology Center, Raleigh, NC, October 2018 Selected Project Experience # IDB Groundwater Monitoring Platform in Latin America (2019 to 2021)\u2014 Data Analyst . Provided technical support to the IDB Groundwater Monitoring Platform project, which resulted in a detailed groundwater monitoring platform for aquifers in Latin America. Support included data collection, literature review, and geospatial analysis. U.S. Agency for International Development Power Africa, Economic and Geospatial Analysis (2019 to 2021)\u2014 Geospatial Analyst . Provided technical support to the Power Africa Off-Grid Project (PAOP) and the East Africa Energy Project (EAEP). Support included geospatial analysis of potential markets for off-grid electrification, data collection, literature review, and technical writing. High-Speed Internet Access in Africa and Asia (2019 to 2020)\u2014 Technical Writer . Provided support for finalizing the reports which outline the results of the econometric analysis involved in this study. Support included data collection and technical writing. Assessing Resilience, Carbon and Water Cycling of Managed and Unmanaged Forests of the U.S. Southeast Coastal Plain in Response to Changes in Hydrology, Extreme Events, and Climate (2018 to 2019)\u2014 Research Assistant . Collected soil samples, soil-gas samples, and temperature readings at research towers in the Alligator River Wildlife Refuge in Plymouth, North Carolina. Conducted recurring analyses of soil samples using mass spectrophotometry. Analyzed soil gasses for methane and carbon quantities using gas concentration analyzers. Assisted postdoctoral research scholars in maintenance of research tower sensors and field-based sensors. Professional Experience # 2019 to date. RTI International, Research Triangle Park, NC. Economist 1 (2019 to date). Provides qualitative and quantitative research support to technical documents, public-facing summary reports, and publications. Reviews the technical and professional literature to identify specific findings, build background knowledge, and inform study designs. Conducts data management, analysis, and visualization using Excel, Stata, R, Tableau, ArcGIS, and other tools. Energy Economics Intern (May to September 2019). Conducted data collection and analysis, literature reviews, and research pertaining to off-grid renewable energy solutions for underserved countries. Kilowatts to Dollars \u2013 LEED IR&D: Researched various off-grid solar technologies and integrated existing geospatial datasets to highlight areas with potential for off-grid solar irrigation implementation in Ethiopia as a solution to support off-grid electrification and development. 2018 to 2019. NC State Tree Physiology Lab, Raleigh, NC. Research Assistant. Conducted field research involving tree coring, gas sampling, research site maintenance. Lab experience included enzyme activity analysis, microbial biomass analysis, cleaning, and solution preparation. 2016 to 2018. Digital Cloak, LLC, Stafford, VA. Research/Analyst. Conducted power plant research by collecting and interpreting data on North Carolina and Virginia power plants. Information later used by the U.S. Department of Defense. Computer Skills # Python Bash Git/Github Docker Kubernetes ArcGIS QGIS Technical Reports # Fein-Smolinski, B., O'Connor, A. C., Gallaher, M. P., & Cowell, C. R. (2024). Impact analysis of CSIRO residential energy efficiency services. Commonwealth Scientific and Industrial Research Organisation. Petrusa, J., Fein-Smolinski, B., Henry, C., Weisberg, S., Cowell, C., & Minor, T. (2024). North Carolina Clean Transportation Study: A community impact assessment of clean transportation policy for medium and heavy-duty trucks in North Carolina. Environmental Defense Fund. Hogan, M., Bailey, A., Wilkinson, J., Cowell, C., & Lawrence, S. (2023). What federal funding applications in innovation tell us about the future of economic development in North Carolina. RTI International. Love, E., Wood, D. W., Muth, M. K., & Cowell, C. R. (2022). Results of trade model elasticity comparison analysis. USDA Foreign Agricultural Service. Cowell, C. R., Gallaher, M. P., Larson, J., & Schwartz, A. (2022). The potential for off-grid solar groundwater irrigation pumping in Sub-Saharan Africa: An exploratory analysis. RTI Press.","title":"Resume"},{"location":"about/resume/#summary-of-professional-experience","text":"Mr. Cowell is an economist in RTI International\u2019s Center for Applied Economics and Strategy. He supports senior staff in conducting literature reviews; drafting technical documents; producing public-facing summary reports, data analyses, and geospatial analyses; and performing qualitative and quantitative research for nonprofit, private-sector, federal, and international clients. His past work includes data collection and analysis, writing of technical reports, field research of soil and gases, and laboratory research for enzyme and microbial biomass analyses. Mr. Cowell has used statistical software such as Excel to manipulate and analyze datasets. He has also used geographic information software such as ArcGIS and QGIS to perform spatial analyses of geocoded datasets. His research interests include renewable energy, economic development, international development, and the environment.","title":"Summary of Professional Experience"},{"location":"about/resume/#education","text":"BS, Environmental Science (minor in Renewable Energy Assessment), North Carolina State University, Raleigh, NC, 2019.","title":"Education"},{"location":"about/resume/#certifications-and-licenses","text":"Renewable Energy Technologies Diploma, North Carolina Clean Energy Technology Center, Raleigh, NC, October 2018","title":"Certifications and Licenses"},{"location":"about/resume/#selected-project-experience","text":"IDB Groundwater Monitoring Platform in Latin America (2019 to 2021)\u2014 Data Analyst . Provided technical support to the IDB Groundwater Monitoring Platform project, which resulted in a detailed groundwater monitoring platform for aquifers in Latin America. Support included data collection, literature review, and geospatial analysis. U.S. Agency for International Development Power Africa, Economic and Geospatial Analysis (2019 to 2021)\u2014 Geospatial Analyst . Provided technical support to the Power Africa Off-Grid Project (PAOP) and the East Africa Energy Project (EAEP). Support included geospatial analysis of potential markets for off-grid electrification, data collection, literature review, and technical writing. High-Speed Internet Access in Africa and Asia (2019 to 2020)\u2014 Technical Writer . Provided support for finalizing the reports which outline the results of the econometric analysis involved in this study. Support included data collection and technical writing. Assessing Resilience, Carbon and Water Cycling of Managed and Unmanaged Forests of the U.S. Southeast Coastal Plain in Response to Changes in Hydrology, Extreme Events, and Climate (2018 to 2019)\u2014 Research Assistant . Collected soil samples, soil-gas samples, and temperature readings at research towers in the Alligator River Wildlife Refuge in Plymouth, North Carolina. Conducted recurring analyses of soil samples using mass spectrophotometry. Analyzed soil gasses for methane and carbon quantities using gas concentration analyzers. Assisted postdoctoral research scholars in maintenance of research tower sensors and field-based sensors.","title":"Selected Project Experience"},{"location":"about/resume/#professional-experience","text":"2019 to date. RTI International, Research Triangle Park, NC. Economist 1 (2019 to date). Provides qualitative and quantitative research support to technical documents, public-facing summary reports, and publications. Reviews the technical and professional literature to identify specific findings, build background knowledge, and inform study designs. Conducts data management, analysis, and visualization using Excel, Stata, R, Tableau, ArcGIS, and other tools. Energy Economics Intern (May to September 2019). Conducted data collection and analysis, literature reviews, and research pertaining to off-grid renewable energy solutions for underserved countries. Kilowatts to Dollars \u2013 LEED IR&D: Researched various off-grid solar technologies and integrated existing geospatial datasets to highlight areas with potential for off-grid solar irrigation implementation in Ethiopia as a solution to support off-grid electrification and development. 2018 to 2019. NC State Tree Physiology Lab, Raleigh, NC. Research Assistant. Conducted field research involving tree coring, gas sampling, research site maintenance. Lab experience included enzyme activity analysis, microbial biomass analysis, cleaning, and solution preparation. 2016 to 2018. Digital Cloak, LLC, Stafford, VA. Research/Analyst. Conducted power plant research by collecting and interpreting data on North Carolina and Virginia power plants. Information later used by the U.S. Department of Defense.","title":"Professional Experience"},{"location":"about/resume/#computer-skills","text":"Python Bash Git/Github Docker Kubernetes ArcGIS QGIS","title":"Computer Skills"},{"location":"about/resume/#technical-reports","text":"Fein-Smolinski, B., O'Connor, A. C., Gallaher, M. P., & Cowell, C. R. (2024). Impact analysis of CSIRO residential energy efficiency services. Commonwealth Scientific and Industrial Research Organisation. Petrusa, J., Fein-Smolinski, B., Henry, C., Weisberg, S., Cowell, C., & Minor, T. (2024). North Carolina Clean Transportation Study: A community impact assessment of clean transportation policy for medium and heavy-duty trucks in North Carolina. Environmental Defense Fund. Hogan, M., Bailey, A., Wilkinson, J., Cowell, C., & Lawrence, S. (2023). What federal funding applications in innovation tell us about the future of economic development in North Carolina. RTI International. Love, E., Wood, D. W., Muth, M. K., & Cowell, C. R. (2022). Results of trade model elasticity comparison analysis. USDA Foreign Agricultural Service. Cowell, C. R., Gallaher, M. P., Larson, J., & Schwartz, A. (2022). The potential for off-grid solar groundwater irrigation pumping in Sub-Saharan Africa: An exploratory analysis. RTI Press.","title":"Technical Reports"},{"location":"corecomps/database/","text":"Self-Hosting ArcGIS Content using ArcServer and Postgres # Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Databases and Database Management"},{"location":"corecomps/database/#self-hosting-arcgis-content-using-arcserver-and-postgres","text":"Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Self-Hosting ArcGIS Content using ArcServer and Postgres"},{"location":"corecomps/modeling/","text":"Assessment of Venus Flytrap Sightings and Habitat Suitability # Problem Description The Venus flytrap, or Dionaea Muscipula, is a unique species of carnivorous flora that is endemic to the Carolinas, favoring moist, loamy and/or sandy soils that are often found among Longleaf pine forests. These plants are more likely thrive when unique conditions such as acidic, moist soils and the existence of small-scale wildfires overlap in space. Unfortunately, the species falls victim to poaching and habitat change - this may be the reason for ongoing efforts to have the plant listed as threatened or endangered. Researchers and citizen scientists alike stand to benefit from the ground-truthing of habitat extents and the generation of new observations. A custom ArcGIS Toolbox has been developed to enable basic habitat suitability analysis, as well as the comparison of suitable areas, or \"hotspots\", to locations of recent recorded sightings. Analysis To support education and research efforts related to flytrap conservation, a geospatial application was be developed. This application takes multiple environmental parameters that are clipped to the study extent (North Carolina) and filtered according to optimal Venus flytrap (D. muscipula) habitat conditions. These parameters are constrained and overlaid to produce a \u201chotspots\u201d layer which indicates areas where there may be more favorable conditions for Venus flytrap populations. The program compares these hotspots with recent, research-grade public observation data in an attempt to establish potential field study zones where the species may be thriving. The program produces user-defined, mile-distance buffers around each observation point to determine how much hotspots falls within the vicinity of known/documented populations. The amount of hotspots within each respective buffer distance is also summarized in a message. The program outputs a user-defined web page presenting observation points that directly overlap (or using buffers if no direct overlap) with the \u201chotspots\u201d layer. This web page presents study sites that should be prioritized for near-term field research on known populations (ex: ground-truthing). This summary data acts as a starting point for exploratory researchers seeking to produce more observation data in areas where thriving populations have not yet been recorded. Results Figure 4 shows the custom html page that results from user input. In this case the user set the image count to 10 and the cutoff year to 2002, to show the first 10 flytrap observations since 2002. Figure 5 shows an example output map that shows the identified flytrap hotpsots and observation buffers that are defined by the user. Reflection This custom tool allows users to visually explore the relationship between community flytrap observations and locations that expected to be flytrap hotspots. The custom inputs allow the user to focus on specific habitat characteristics over specific timeframes. This tool could be further improved by creating an automated request/update feature for updating the input iNaturalist data. Permanent Homestead Observation and Ranking Tool (PHORT) # Problem Description In recent years, the housing market has been extremely volatile across the US, with prices in the Triangle at sustained all-time highs. Natural and man-made resources are also becoming increasingly more strained in areas with higher population density. The higher demand for resources and shelter can also drive prices higher in suburban, peri-urban, and urban areas. It may be potentially more cost-effective to settle in a rural area where more land is typically available for purchase and the average cost per acre is generally lower. Another benefit that aligns with seeking rural land for a permanent home is that there are programs such as the USDA Single Family Housing Guaranteed Loan Program. Due to these circumstances, I decided to seek rural land to build my own homestead, so that I can avoid purchasing an overvalued house with potentially unfavorable rates, and so that I may also take my household resource management into my own hands. To maximize the user's chances of receiving financial support from programs like the one from USDA, a spatially explicit methodology is used to evaluate tax parcels for their viability to support a rural homestead. The methodology has been packaged in the Python programming language and named the Permanent Homestead Observation and Ranking Tool (PHORT). Analysis Once the input datasets are available in the correct locations and formats, the tool can begin the analysis. There are logical checks throughout the process that check for the presence of the input data as well as the results of preprocessing, to prevent both failure and unnecessary processing. The process starts off by taking user preferences which are used to prepare the parcel data and togglable explanatory layers, such as elevation and distance to cropland. Figure 3 shows an example of the first stage of the process, where the user sets their preferences, and which are then passed to the preprocessing functions. After the parcels are filtered according to user preferences, the tool prompts the user for additional preferences that influence how the final score is calculated. First the user determines whether they prefer higher or lower elevations, then the user confirms whether they prefer to be located closer or further from existing crop production. I currently opt for higher elevations and closer proximity to cropland \u2013 this seems to be a good proxy for avoiding flood zones while still given some favor to lower, flatter areas that farms typically exist in. The other layers are currently preprocessed arbitrarily, with their importance being implied. Public water supply, power lines, and major roads all lend to resource availability especially in cases where the potential for self-sufficiency is limited (ex: no wells to groundwater). The solar radiation and aspect surfaces are both processed to favor flat or Southfacing areas that have high solar photovoltaic potential. Results After all the input layers are preprocessed, the final score surface is calculated by multiplying all the raster surfaces together. This final surface represents the viability of a grid cell to support a self-sufficient homestead on a scale of 0 (no viability) to 1 (perfect viability). The scoring surface is then used in a zonal analysis where the average homestead score is calculated within each parcel based on the mean score of contained pixels. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner. Basic Site Assessment for Self-Sufficient Homesteading # Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Modeling and Analytics"},{"location":"corecomps/modeling/#assessment-of-venus-flytrap-sightings-and-habitat-suitability","text":"Problem Description The Venus flytrap, or Dionaea Muscipula, is a unique species of carnivorous flora that is endemic to the Carolinas, favoring moist, loamy and/or sandy soils that are often found among Longleaf pine forests. These plants are more likely thrive when unique conditions such as acidic, moist soils and the existence of small-scale wildfires overlap in space. Unfortunately, the species falls victim to poaching and habitat change - this may be the reason for ongoing efforts to have the plant listed as threatened or endangered. Researchers and citizen scientists alike stand to benefit from the ground-truthing of habitat extents and the generation of new observations. A custom ArcGIS Toolbox has been developed to enable basic habitat suitability analysis, as well as the comparison of suitable areas, or \"hotspots\", to locations of recent recorded sightings. Analysis To support education and research efforts related to flytrap conservation, a geospatial application was be developed. This application takes multiple environmental parameters that are clipped to the study extent (North Carolina) and filtered according to optimal Venus flytrap (D. muscipula) habitat conditions. These parameters are constrained and overlaid to produce a \u201chotspots\u201d layer which indicates areas where there may be more favorable conditions for Venus flytrap populations. The program compares these hotspots with recent, research-grade public observation data in an attempt to establish potential field study zones where the species may be thriving. The program produces user-defined, mile-distance buffers around each observation point to determine how much hotspots falls within the vicinity of known/documented populations. The amount of hotspots within each respective buffer distance is also summarized in a message. The program outputs a user-defined web page presenting observation points that directly overlap (or using buffers if no direct overlap) with the \u201chotspots\u201d layer. This web page presents study sites that should be prioritized for near-term field research on known populations (ex: ground-truthing). This summary data acts as a starting point for exploratory researchers seeking to produce more observation data in areas where thriving populations have not yet been recorded. Results Figure 4 shows the custom html page that results from user input. In this case the user set the image count to 10 and the cutoff year to 2002, to show the first 10 flytrap observations since 2002. Figure 5 shows an example output map that shows the identified flytrap hotpsots and observation buffers that are defined by the user. Reflection This custom tool allows users to visually explore the relationship between community flytrap observations and locations that expected to be flytrap hotspots. The custom inputs allow the user to focus on specific habitat characteristics over specific timeframes. This tool could be further improved by creating an automated request/update feature for updating the input iNaturalist data.","title":"Assessment of Venus Flytrap Sightings and Habitat Suitability"},{"location":"corecomps/modeling/#permanent-homestead-observation-and-ranking-tool-phort","text":"Problem Description In recent years, the housing market has been extremely volatile across the US, with prices in the Triangle at sustained all-time highs. Natural and man-made resources are also becoming increasingly more strained in areas with higher population density. The higher demand for resources and shelter can also drive prices higher in suburban, peri-urban, and urban areas. It may be potentially more cost-effective to settle in a rural area where more land is typically available for purchase and the average cost per acre is generally lower. Another benefit that aligns with seeking rural land for a permanent home is that there are programs such as the USDA Single Family Housing Guaranteed Loan Program. Due to these circumstances, I decided to seek rural land to build my own homestead, so that I can avoid purchasing an overvalued house with potentially unfavorable rates, and so that I may also take my household resource management into my own hands. To maximize the user's chances of receiving financial support from programs like the one from USDA, a spatially explicit methodology is used to evaluate tax parcels for their viability to support a rural homestead. The methodology has been packaged in the Python programming language and named the Permanent Homestead Observation and Ranking Tool (PHORT). Analysis Once the input datasets are available in the correct locations and formats, the tool can begin the analysis. There are logical checks throughout the process that check for the presence of the input data as well as the results of preprocessing, to prevent both failure and unnecessary processing. The process starts off by taking user preferences which are used to prepare the parcel data and togglable explanatory layers, such as elevation and distance to cropland. Figure 3 shows an example of the first stage of the process, where the user sets their preferences, and which are then passed to the preprocessing functions. After the parcels are filtered according to user preferences, the tool prompts the user for additional preferences that influence how the final score is calculated. First the user determines whether they prefer higher or lower elevations, then the user confirms whether they prefer to be located closer or further from existing crop production. I currently opt for higher elevations and closer proximity to cropland \u2013 this seems to be a good proxy for avoiding flood zones while still given some favor to lower, flatter areas that farms typically exist in. The other layers are currently preprocessed arbitrarily, with their importance being implied. Public water supply, power lines, and major roads all lend to resource availability especially in cases where the potential for self-sufficiency is limited (ex: no wells to groundwater). The solar radiation and aspect surfaces are both processed to favor flat or Southfacing areas that have high solar photovoltaic potential. Results After all the input layers are preprocessed, the final score surface is calculated by multiplying all the raster surfaces together. This final surface represents the viability of a grid cell to support a self-sufficient homestead on a scale of 0 (no viability) to 1 (perfect viability). The scoring surface is then used in a zonal analysis where the average homestead score is calculated within each parcel based on the mean score of contained pixels. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Permanent Homestead Observation and Ranking Tool (PHORT)"},{"location":"corecomps/modeling/#basic-site-assessment-for-self-sufficient-homesteading","text":"Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Basic Site Assessment for Self-Sufficient Homesteading"},{"location":"corecomps/programming/","text":"Scripting the Oyster HSI from Theuerkauf et al. (2019) # Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner. Automating Output Visuals for Venus Flytrap observations using Python and HTML # Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Programming"},{"location":"corecomps/programming/#scripting-the-oyster-hsi-from-theuerkauf-et-al-2019","text":"Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Scripting the Oyster HSI from Theuerkauf et al. (2019)"},{"location":"corecomps/programming/#automating-output-visuals-for-venus-flytrap-observations-using-python-and-html","text":"Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Automating Output Visuals for Venus Flytrap observations using Python and HTML"},{"location":"corecomps/web/","text":"GEWA Angler Catch Hotspot Application (GACHA) # Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner. Creating a Story Map of Wildlife Encounters Using iNaturalist Data # Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Web Services"},{"location":"corecomps/web/#gewa-angler-catch-hotspot-application-gacha","text":"Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"GEWA Angler Catch Hotspot Application (GACHA)"},{"location":"corecomps/web/#creating-a-story-map-of-wildlife-encounters-using-inaturalist-data","text":"Problem Description Self-hosting ArcGIS data and geoprocesses enables the developer to customize project infrastructure (hardware and software) to meet project needs. It also enables the developer to customize security settings to ensure proper access when administrative rights are needed for some users, but not all of them. To explore this concept, a remote server was established on NCSU VCL infrastructure to host an ArcServer instance connected to a postgres backend database. Analysis A geodatabase was created using postgres and ArcGIS Pro to serve as the backend data source for all content served by ArcServer. The geodatabase includes different users types, such as admins and general users. Admins can add and remove content from the server, while general users are only able to access the served content. Figure 1 shows all of the layers that are hosted from the backend geodatabase. The layers include tables, feature classes, and views that have been added to the geodatabase using my personal admin account, crcowell. Results Figure 2 shows the resulting ArcGIS Online (AGOL) web map that uses the various layers hosted on the ArcServer instance. The buildings layer pop-up window is shown to highlight that the metadata is served as imported. Reflection This hosting scenario showed the developer how to successfully establish infrastructure to host spatial data using personal infrastructure. User access and security settings were used to provide an overview of the different roles that can be established to restrict certain data. A good way to build upon this scenario would be to create certain views and datasets that are only available to specific users. Pairing this sort of setup with a mobile use case, using something like ArcGIS Field Maps, would provide the necessary infrastructure for collecting and serving field data in an efficient manner.","title":"Creating a Story Map of Wildlife Encounters Using iNaturalist Data"}]}